//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TourOperationsClient_991531576.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TourInfo", Namespace="http://schemas.datacontract.org/2004/07/FinalTourService_991531576")]
    [System.SerializableAttribute()]
    public partial class TourInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TourIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TourId {
            get {
                return this.TourIdField;
            }
            set {
                if ((this.TourIdField.Equals(value) != true)) {
                    this.TourIdField = value;
                    this.RaisePropertyChanged("TourId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.DBOperations")]
    public interface DBOperations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DBOperations/InsertATour", ReplyAction="http://tempuri.org/DBOperations/InsertATourResponse")]
        string InsertATour(TourOperationsClient_991531576.ServiceReference1.TourInfo tour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DBOperations/InsertATour", ReplyAction="http://tempuri.org/DBOperations/InsertATourResponse")]
        System.Threading.Tasks.Task<string> InsertATourAsync(TourOperationsClient_991531576.ServiceReference1.TourInfo tour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DBOperations/RetrieveTourInfo", ReplyAction="http://tempuri.org/DBOperations/RetrieveTourInfoResponse")]
        TourOperationsClient_991531576.ServiceReference1.TourInfo[] RetrieveTourInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DBOperations/RetrieveTourInfo", ReplyAction="http://tempuri.org/DBOperations/RetrieveTourInfoResponse")]
        System.Threading.Tasks.Task<TourOperationsClient_991531576.ServiceReference1.TourInfo[]> RetrieveTourInfoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DBOperationsChannel : TourOperationsClient_991531576.ServiceReference1.DBOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBOperationsClient : System.ServiceModel.ClientBase<TourOperationsClient_991531576.ServiceReference1.DBOperations>, TourOperationsClient_991531576.ServiceReference1.DBOperations {
        
        public DBOperationsClient() {
        }
        
        public DBOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertATour(TourOperationsClient_991531576.ServiceReference1.TourInfo tour) {
            return base.Channel.InsertATour(tour);
        }
        
        public System.Threading.Tasks.Task<string> InsertATourAsync(TourOperationsClient_991531576.ServiceReference1.TourInfo tour) {
            return base.Channel.InsertATourAsync(tour);
        }
        
        public TourOperationsClient_991531576.ServiceReference1.TourInfo[] RetrieveTourInfo() {
            return base.Channel.RetrieveTourInfo();
        }
        
        public System.Threading.Tasks.Task<TourOperationsClient_991531576.ServiceReference1.TourInfo[]> RetrieveTourInfoAsync() {
            return base.Channel.RetrieveTourInfoAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.AuthenticationUser")]
    public interface AuthenticationUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuthenticationUser/Validate", ReplyAction="http://tempuri.org/AuthenticationUser/ValidateResponse")]
        string Validate(string username, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuthenticationUser/Validate", ReplyAction="http://tempuri.org/AuthenticationUser/ValidateResponse")]
        System.Threading.Tasks.Task<string> ValidateAsync(string username, string pass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AuthenticationUserChannel : TourOperationsClient_991531576.ServiceReference1.AuthenticationUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationUserClient : System.ServiceModel.ClientBase<TourOperationsClient_991531576.ServiceReference1.AuthenticationUser>, TourOperationsClient_991531576.ServiceReference1.AuthenticationUser {
        
        public AuthenticationUserClient() {
        }
        
        public AuthenticationUserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationUserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationUserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationUserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Validate(string username, string pass) {
            return base.Channel.Validate(username, pass);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAsync(string username, string pass) {
            return base.Channel.ValidateAsync(username, pass);
        }
    }
}
